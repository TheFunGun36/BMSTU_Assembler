SSTK SEGMENT PARA STACK 'STACK'
	DB 100 DUP(0)
SSTK ENDS

SDM SEGMENT PARA PUBLIC 'DATA'
	MTX_SZ DB 2 DUP (?)
	MTX DB 9*9 DUP (?)
	MSG_INPUT_INVALID DB 13, 10, 'ERROR: INVALID INPUT', 13, 10, '$'
	MSG_INPUT_SIZE DB 'ENTER MATRIX ROWS AND COLUMNS: $'
	MSG_INPUT_DATA DB 'ENTER MATRIX ELEMENTS ROW BY ROW:', 13, 10, '$'
	MSG_MIN_EL DB 'INDEX OF ROW WITH MINIMUM ELEMENT SUM: $'
	MSG_DELETED DB 'ROW DELETED', 13, 10, '$'
	MSG_CUR_MATRIX DB 'CURRENT MATRIX:', 13, 10, '$'
	MSG_MATRIX_EMPTY DB 'MATRIX IS EMPTY', 13, 10, '$'
SDM ENDS

SCM SEGMENT PARA PUBLIC 'CODE'
	ASSUME CS:SCM, DS:SDM
MAIN:
	MOV AX, SDM
	MOV DS, AX
	CALL INPUT_MTX_SZ
	TEST AX, AX
	JNZ MAIN_INPUT_FAILED
	CALL INPUT_MTX
	TEST AX, AX
	JNZ MAIN_INPUT_FAILED
	CALL FIND_ROW_MIN_EL
	CALL DEL_ROW
	CALL PRINT_MATRIX
	MOV AH, 4CH
	INT 21H

MAIN_INPUT_FAILED:
	MOV AH, 09H
	MOV DX, OFFSET MSG_INPUT_INVALID
	INT 21H
	MOV AH, 4CH
	INT 21H

PRINT_MATRIX:
	MOV DI, OFFSET MTX
	MOV CH, MTX_SZ
	TEST CH, CH
	MOV AH, 09H
	JZ PRINT_EMPTY
	MOV CL, MTX_SZ + 1
	TEST CL, CL
	JZ PRINT_EMPTY
	MOV DX, OFFSET MSG_CUR_MATRIX
	INT 21H
	MOV AH, 02H
PRINT_ROW:
	MOV SI, DI
	MOV CL, MTX_SZ + 1
PRINT_COL:
	MOV DL, [SI]
	ADD DL, '0'
	INT 21H
	INC SI
	DEC CL
	TEST CL, CL
	JNZ PRINT_COL
	ADD DI, 9
	MOV DL, 13
	INT 21H
	MOV DL, 10
	INT 21H
	DEC CH
	TEST CH, CH
	JNZ PRINT_ROW
	RET
PRINT_EMPTY:
	MOV DX, OFFSET MSG_MATRIX_EMPTY
	INT 21H
	RET

DEL_ROW:
	MOV CL, AH
	MOV DI, OFFSET MTX
	MOV AL, 9
	MUL AH
	ADD DI, AX
	MOV AL, MTX_SZ
	DEC AL
	MOV MTX_SZ, AL
	SUB CL, AL
	NEG CL
DEL_ROW_LOOP:
	TEST CL, CL
	JZ DEL_ROW_END
	DEC CL
	MOV SI, DI
	ADD SI, 9
	MOV CH, MTX_SZ + 1
COPY_LOOP:
	MOV AH, [SI]
	MOV [DI], AH
	INC DI
	INC SI
	DEC CH
	TEST CH, CH
	JNZ COPY_LOOP
	MOV AX, 9
	SUB AL, MTX_SZ + 1
	ADD DI, AX
	JMP DEL_ROW_LOOP
DEL_ROW_END:
	MOV AH, 09H
	MOV DX, OFFSET MSG_DELETED
	INT 21H
	RET

FIND_ROW_MIN_EL:
	MOV DI, OFFSET MTX
	MOV BH, 0FFH
	MOV CL, MTX_SZ
FOR_EACH_ROW:
	MOV AL, 00H
	MOV SI, DI
	MOV CH, MTX_SZ + 1
FOR_EACH_COL:
	ADD AL, [SI]
	INC SI
	DEC CH
	TEST CH, CH
	JNZ FOR_EACH_COL
	CMP BH, AL
	JBE BAD_VALUE
	MOV BH, AL
	MOV AH, CL
BAD_VALUE:
	ADD DI, 9
	DEC CL
	TEST CL, CL
	JNZ FOR_EACH_ROW
	SUB AH, MTX_SZ
	NEG AH
	MOV BL, AH
	MOV DX, OFFSET MSG_MIN_EL
	MOV AH, 09H
	INT 21H
	MOV AH, 02H
	MOV DL, BL
	ADD DL, '0'
	INT 21H
	MOV DL, 13
	INT 21H
	MOV DL, 10
	INT 21H
	MOV AH, BL
	RET

INPUT_MTX_SZ:
	MOV AH, 09H
	MOV DX, OFFSET MSG_INPUT_SIZE
	INT 21H
	MOV AH, 01H
	INT 21H
	SUB AL, '0'
	CMP AL, 9
	JA INPUT_FAILED
	TEST AL, AL
	JZ INPUT_FAILED
	MOV MTX_SZ, AL
	MOV AH, 02H
	MOV DL, 'x'
	INT 21H
	MOV AH, 01H
	INT 21H
	SUB AL, '0'
	CMP AL, 9
	JA INPUT_FAILED
	TEST AL, AL
	JZ INPUT_FAILED
	MOV MTX_SZ + 1, AL
	MOV AH, 02H
	MOV DL, 13
	INT 21H
	MOV DL, 10
	INT 21H
	MOV AX, 0
	RET

INPUT_MTX:
	MOV CL, [MTX_SZ]
	MOV BH, [MTX_SZ + 1]
	MOV AH, 09H
	MOV DX, OFFSET MSG_INPUT_DATA
	INT 21H
	MOV SI, OFFSET MTX
INPUT_ROW:
	MOV AH, 02H
	MOV DL, '>'
	INT 21H
	MOV AH, 01H
	MOV DI, SI
	MOV CH, BH	
INPUT_NUMBER:
	INT 21H
	SUB AL, '0'
	CMP AL, 9
	JA INPUT_FAILED
	MOV [DI], AL
	INC DI
	DEC CH
	TEST CH, CH
	JNZ INPUT_NUMBER
	ADD SI, 9
	MOV AH, 02H
	MOV DL, 13
	INT 21H	
	MOV DL, 10
	INT 21H
	DEC CL

	TEST CL, CL
	JNZ INPUT_ROW
	MOV AX, 0
	RET

INPUT_FAILED:
	MOV AX, 1
	RET

SCM ENDS
END MAIN
